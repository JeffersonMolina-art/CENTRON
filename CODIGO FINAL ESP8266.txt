#include <ESP8266WiFi.h>
#include <ESP8266HTTPClient.h>
#include <Wire.h>
#include <LiquidCrystal_I2C.h>
#include <SPI.h>
#include <MFRC522.h>

// Pines y configuraciones
#define RST_PIN D3 // Pin RST del RC522
#define SS_PIN D4  // Pin SS (SDA) del RC522
#define ALCOHOL_SENSOR_PIN A0 // Pin del sensor de alcohol

// Configuración LCD y RFID
LiquidCrystal_I2C lcd(0x27, 16, 2);
MFRC522 rfid(SS_PIN, RST_PIN);

// Configuración Wi-Fi y API
const char* ssid = "Nexxt_PROYECTO"; // Nombre de tu red Wi-Fi
const char* password = "12345678"; // Contraseña de tu red Wi-Fi
const char* apiURL = "http://192.168.0.100:3000/api/asistencias/registrar"; // URL de la API de tu servidor

WiFiClient client; // Cliente WiFi para la conexión

// UIDs de tarjetas autorizadas
byte uidGuillermo[] = {0x91, 0xEF, 0xA2, 0x1A}; 
byte uidJonatan[] = {0x0A, 0x26, 0x67, 0xAD};

// Función para verificar UID
bool checkUID(byte *actualUID, byte *validUID) {
  for (byte i = 0; i < 4; i++) {
    if (actualUID[i] != validUID[i]) {
      return false;
    }
  }
  return true;
}

void setup() {
  Serial.begin(9600);
  SPI.begin();
  rfid.PCD_Init();
  lcd.init();
  lcd.backlight();
  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print("Ingrese su UID");

  // Conectar a Wi-Fi
  WiFi.begin(ssid, password);
  Serial.print("Conectando a Wi-Fi");
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);

  }
  Serial.println("\nConectado a la red Wi-Fi.");
}

void loop() {
  // Verificar si hay una nueva tarjeta NFC
  if (rfid.PICC_IsNewCardPresent() && rfid.PICC_ReadCardSerial()) {
    String nombreUsuario = "";

    // Verificar el UID y asignar nombre
    if (checkUID(rfid.uid.uidByte, uidGuillermo)) {
      nombreUsuario = "1234567";
      displayAccess(nombreUsuario);
      delay(2000); // Mostrar nombre durante 2 segundos
      medirAlcohol(nombreUsuario);
    } else if (checkUID(rfid.uid.uidByte, uidJonatan)) {
      nombreUsuario = "123456789";
      displayAccess(nombreUsuario);
      delay(2000); // Mostrar nombre durante 2 segundos
      medirAlcohol(nombreUsuario);
    } else {
      lcd.clear();
      lcd.setCursor(0, 0);
      lcd.print("UID no valido");
      delay(2000); // Mostrar mensaje durante 2 segundos
    }

    rfid.PICC_HaltA();  // Detener la lectura de la tarjeta
    rfid.PCD_StopCrypto1();  // Detener la criptografía
    delay(2000);  // Pausa
    lcd.clear();
    lcd.setCursor(0, 0);
    lcd.print("Ingrese su UID");
  }
}

// Función para medir el nivel de alcohol y enviar datos a la API
void medirAlcohol(String nombreUsuario) {
  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print("Sople ahora...");
  delay(2000);

  // Leer el valor del sensor de alcohol
  int sensorValue = analogRead(ALCOHOL_SENSOR_PIN);
  int alcoholValue = map(sensorValue, 0, 1023, 1, 20);

  // Determinar el nivel de alcohol
  String nivelAlcohol = "";
  if (alcoholValue <= 7) {
    nivelAlcohol = "Bajo";
  } else if (alcoholValue > 7 && alcoholValue <= 14) {
    nivelAlcohol = "Medio";
  } else {
    nivelAlcohol = "Alto";
  }

  Serial.print("Nivel de alcohol: ");
  Serial.println(nivelAlcohol);

  // Mostrar nivel de alcohol en LCD
  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print("Nivel: " + nivelAlcohol);
  delay(2000);

  // Enviar datos a la API
  enviarDatosAPI(nombreUsuario, "Presente", nivelAlcohol);
}

// Función para enviar datos a la API
void enviarDatosAPI(String codigoNfc, String estado, String nivelAlcohol) {
  if (WiFi.status() == WL_CONNECTED) {
    HTTPClient http;

    http.begin(client, apiURL);
    http.addHeader("Content-Type", "application/json");

    // Crear JSON con los datos
    String jsonData = "{\"codigoNfc\":\"" + codigoNfc + "\", \"estado\":\"" + estado + "\", \"nivelAlcohol\":\"" + nivelAlcohol + "\"}";
    Serial.println("Json" + String(jsonData));
    // Enviar la solicitud POST
    int httpResponseCode = http.POST(jsonData);

    // Verificar la respuesta del servidor
    if (httpResponseCode > 0) {
      String response = http.getString();
      Serial.println("Respuesta del servidor: " + response);
    } else {
      Serial.println("Error en la petición POST: " + String(httpResponseCode));
    }

    http.end(); // Finalizar la conexión
  } else {
    Serial.println("Error de conexión Wi-Fi");
  }
}

// Función para mostrar el acceso en la pantalla LCD
void displayAccess(String nombre) {
  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print("UID: " + nombre);
  delay(2000);
}